{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./reducers/auth\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport { createStateSyncMiddleware, initMessageListener } from \"redux-state-sync\";\nimport orderReducer from \"./reducers/order.js\";\nconst authPersistConfig = {\n  key: \"auth\",\n  storage\n};\nconst rootReducer = combineReducers({\n  auth: persistReducer(authPersistConfig, authReducer),\n  order: orderReducer\n});\nconst rootPersistConfig = {\n  key: \"root\",\n  storage: storage,\n  blacklist: [\"persist/PERSIST\"],\n  // Thêm reducer mới vào danh sách được lưu trữ nếu bạn muốn lưu trữ nó\n  whitelist: [\"auth\", \"order\"] // điều chỉnh tùy thuộc\n};\n\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\nconst syncConfig = {\n  blacklist: [\"persist/PERSIST\"],\n  whitelist: [\"auth\", \"order\"] // điều chỉnh tùy thuộc\n};\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk, createStateSyncMiddleware(syncConfig)]\n});\ninitMessageListener(store);\nexport default store;\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","authReducer","storage","persistReducer","persistStore","thunk","createStateSyncMiddleware","initMessageListener","orderReducer","authPersistConfig","key","rootReducer","auth","order","rootPersistConfig","blacklist","whitelist","persistedReducer","syncConfig","store","reducer","middleware","persistor"],"sources":["F:/e-commerce-kltn/client/src/store/index.js"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./reducers/auth\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  createStateSyncMiddleware,\r\n  initMessageListener,\r\n} from \"redux-state-sync\";\r\nimport orderReducer from \"./reducers/order.js\";\r\n\r\nconst authPersistConfig = { key: \"auth\", storage };\r\nconst rootReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  order: orderReducer,\r\n});\r\n\r\nconst rootPersistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n  blacklist: [\"persist/PERSIST\"],\r\n  // Thêm reducer mới vào danh sách được lưu trữ nếu bạn muốn lưu trữ nó\r\n  whitelist: [\"auth\", \"order\"], // điều chỉnh tùy thuộc\r\n};\r\n\r\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\r\n\r\n\r\nconst syncConfig = {\r\n  blacklist: [\"persist/PERSIST\"],\r\n  whitelist: [\"auth\", \"order\"], // điều chỉnh tùy thuộc\r\n};\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: [thunk, createStateSyncMiddleware(syncConfig)],\r\n});\r\n\r\ninitMessageListener(store);\r\n\r\nexport default store;\r\n\r\nexport const persistor  = persistStore(store);\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SACEC,yBAAyB,EACzBC,mBAAmB,QACd,kBAAkB;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAE9C,MAAMC,iBAAiB,GAAG;EAAEC,GAAG,EAAE,MAAM;EAAER;AAAQ,CAAC;AAClD,MAAMS,WAAW,GAAGZ,eAAe,CAAC;EAClCa,IAAI,EAAET,cAAc,CAACM,iBAAiB,EAAER,WAAW,CAAC;EACpDY,KAAK,EAAEL;AACT,CAAC,CAAC;AAEF,MAAMM,iBAAiB,GAAG;EACxBJ,GAAG,EAAE,MAAM;EACXR,OAAO,EAAEA,OAAO;EAChBa,SAAS,EAAE,CAAC,iBAAiB,CAAC;EAC9B;EACAC,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAE;AAChC,CAAC;;AAED,MAAMC,gBAAgB,GAAGd,cAAc,CAACW,iBAAiB,EAAEH,WAAW,CAAC;AAGvE,MAAMO,UAAU,GAAG;EACjBH,SAAS,EAAE,CAAC,iBAAiB,CAAC;EAC9BC,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAE;AAChC,CAAC;;AAGD,MAAMG,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAEH,gBAAgB;EACzBI,UAAU,EAAE,CAAChB,KAAK,EAAEC,yBAAyB,CAACY,UAAU,CAAC;AAC3D,CAAC,CAAC;AAEFX,mBAAmB,CAACY,KAAK,CAAC;AAE1B,eAAeA,KAAK;AAEpB,OAAO,MAAMG,SAAS,GAAIlB,YAAY,CAACe,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}