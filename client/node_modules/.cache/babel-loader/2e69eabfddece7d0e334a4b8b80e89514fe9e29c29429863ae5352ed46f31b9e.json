{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport api from \"./api\";\nimport httpRequest from \"./httpRequest\";\nimport store from \"../store\";\n\n//get product detail\nexport const getProductDetail = async id => {\n  try {\n    let url = `${api.url.productdetail}/${id}`;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};\n\n//get list product\nexport const getProductList = async () => {\n  try {\n    let url = api.url.products;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting products list: \";\n    console.error(errMessage, err);\n    return {\n      success: false,\n      message: errMessage\n    };\n  }\n};\n\n// get product description\nexport const getProductDescription = async id => {\n  try {\n    let url = `${api.url.productdescription}/${id}`;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};\n\n//get list category\nexport const listCategory = async () => {\n  try {\n    let url = api.url.listCategory;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting products list: \";\n    console.error(errMessage, err);\n    return {\n      success: false,\n      message: errMessage\n    };\n  }\n};\n\n// get product by category\nexport const getProductsByCategory = async id => {\n  try {\n    let url = `${api.url.productsbycategory}/${id}`;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};\n\n//get product option\nexport const getProductOption = async productId => {\n  try {\n    let url = `${api.url.productoption}/${productId}`;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};\n\n//get product option detail\nexport const getProductOptionDetail = async (productId, productOptionDetailId) => {\n  try {\n    let url = `${api.url.productoptiondetail}/${productId}/${productOptionDetailId}`;\n    console.log(\"url\", url);\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};\n\n//get product item\nexport const getProductItem = async id => {\n  try {\n    let url = `${api.url.productitem}/${id}`;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};\n\n//get product items\nexport const getProductItems = async id => {\n  try {\n    let url = `${api.url.productitems}/${id}`;\n    const response = await httpRequest({\n      url: url,\n      method: \"GET\"\n    });\n    if (response.code === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    const errMessage = \"Error in getting productdetail: \";\n    console.error(errMessage, err);\n    return null;\n  }\n};","map":{"version":3,"names":["useSelector","api","httpRequest","store","getProductDetail","id","url","productdetail","response","method","code","data","err","errMessage","console","error","getProductList","products","success","message","getProductDescription","productdescription","listCategory","getProductsByCategory","productsbycategory","getProductOption","productId","productoption","getProductOptionDetail","productOptionDetailId","productoptiondetail","log","getProductItem","productitem","getProductItems","productitems"],"sources":["F:/e-commerce-kltn/client/src/services/product.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport api from \"./api\";\r\nimport httpRequest from \"./httpRequest\";\r\nimport store from \"../store\";\r\n\r\n\r\n//get product detail\r\nexport const getProductDetail = async (id) => {\r\n  try {\r\n    let url = `${api.url.productdetail}/${id}`;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n//get list product\r\nexport const getProductList = async () => {\r\n  try {\r\n    let url = api.url.products;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting products list: \";\r\n    console.error(errMessage, err);\r\n    return {\r\n      success: false,\r\n      message: errMessage,\r\n    };\r\n  }\r\n};\r\n\r\n\r\n// get product description\r\nexport const getProductDescription = async (id) => {\r\n  try {\r\n    let url = `${api.url.productdescription}/${id}`;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n//get list category\r\nexport const listCategory= async () => {\r\n  try {\r\n    let url = api.url.listCategory;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting products list: \";\r\n    console.error(errMessage, err);\r\n    return {\r\n      success: false,\r\n      message: errMessage,\r\n    };\r\n  }\r\n};\r\n\r\n\r\n// get product by category\r\nexport const getProductsByCategory = async (id) => {\r\n  try {\r\n    let url = `${api.url.productsbycategory}/${id}`;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n//get product option\r\nexport const getProductOption = async (productId) => {\r\n  try {\r\n    let url = `${api.url.productoption}/${productId}`;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n//get product option detail\r\nexport const getProductOptionDetail = async (productId, productOptionDetailId) => {\r\n  try {\r\n    let url = `${api.url.productoptiondetail}/${productId}/${productOptionDetailId}`;\r\n    console.log(\"url\",url)\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n//get product item\r\nexport const getProductItem = async (id) => {\r\n  try {\r\n    let url = `${api.url.productitem}/${id}`;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n//get product items\r\nexport const getProductItems = async (id) => {\r\n  try {\r\n    let url = `${api.url.productitems}/${id}`;\r\n\r\n    const response = await httpRequest({\r\n      url: url,\r\n      method: \"GET\",\r\n    });\r\n    if (response.code === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    const errMessage = \"Error in getting productdetail: \";\r\n    console.error(errMessage, err);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}